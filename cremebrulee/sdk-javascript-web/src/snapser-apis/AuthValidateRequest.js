/**
 * cremebrulee
 * Your custom SDK
 *
 * The version of the OpenAPI document: cremebrulee: v1 SDK
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AuthValidateRequest model module.
 * @module snapser-apis/AuthValidateRequest
 * @version cremebrulee: v1 SDK
 */
class AuthValidateRequest {
    /**
     * Constructs a new <code>AuthValidateRequest</code>.
     * @alias module:snapser-apis/AuthValidateRequest
     * @param sessionToken {String} Session token to validate
     */
    constructor(sessionToken) { 
        
        AuthValidateRequest.initialize(this, sessionToken);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, sessionToken) { 
        obj['session_token'] = sessionToken;
    }

    /**
     * Constructs a <code>AuthValidateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:snapser-apis/AuthValidateRequest} obj Optional instance to populate.
     * @return {module:snapser-apis/AuthValidateRequest} The populated <code>AuthValidateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AuthValidateRequest();

            if (data.hasOwnProperty('session_token')) {
                obj['session_token'] = ApiClient.convertToType(data['session_token'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AuthValidateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AuthValidateRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AuthValidateRequest.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['session_token'] && !(typeof data['session_token'] === 'string' || data['session_token'] instanceof String)) {
            throw new Error("Expected the field `session_token` to be a primitive type in the JSON string but got " + data['session_token']);
        }

        return true;
    }


}

AuthValidateRequest.RequiredProperties = ["session_token"];

/**
 * Session token to validate
 * @member {String} session_token
 */
AuthValidateRequest.prototype['session_token'] = undefined;






export default AuthValidateRequest;

