/**
 * cremebrulee
 * Your custom SDK
 *
 * The version of the OpenAPI document: cremebrulee: v1 SDK
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient.js';

/**
 * The AuthAssociateLoginsRequest model module.
 * @module snapser-apis/AuthAssociateLoginsRequest
 * @version cremebrulee: v1 SDK
 */
class AuthAssociateLoginsRequest {
    /**
     * Constructs a new <code>AuthAssociateLoginsRequest</code>.
     * @alias module:snapser-apis/AuthAssociateLoginsRequest
     * @param discardUserToken {String} Token of the user to discard
     * @param keepUserToken {String} Token of the user to keep
     */
    constructor(discardUserToken, keepUserToken) { 
        
        AuthAssociateLoginsRequest.initialize(this, discardUserToken, keepUserToken);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, discardUserToken, keepUserToken) { 
        obj['discard_user_token'] = discardUserToken;
        obj['keep_user_token'] = keepUserToken;
    }

    /**
     * Constructs a <code>AuthAssociateLoginsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:snapser-apis/AuthAssociateLoginsRequest} obj Optional instance to populate.
     * @return {module:snapser-apis/AuthAssociateLoginsRequest} The populated <code>AuthAssociateLoginsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AuthAssociateLoginsRequest();

            if (data.hasOwnProperty('discard_user_token')) {
                obj['discard_user_token'] = ApiClient.convertToType(data['discard_user_token'], 'String');
            }
            if (data.hasOwnProperty('keep_user_token')) {
                obj['keep_user_token'] = ApiClient.convertToType(data['keep_user_token'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AuthAssociateLoginsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AuthAssociateLoginsRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AuthAssociateLoginsRequest.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['discard_user_token'] && !(typeof data['discard_user_token'] === 'string' || data['discard_user_token'] instanceof String)) {
            throw new Error("Expected the field `discard_user_token` to be a primitive type in the JSON string but got " + data['discard_user_token']);
        }
        // ensure the json data is a string
        if (data['keep_user_token'] && !(typeof data['keep_user_token'] === 'string' || data['keep_user_token'] instanceof String)) {
            throw new Error("Expected the field `keep_user_token` to be a primitive type in the JSON string but got " + data['keep_user_token']);
        }

        return true;
    }


}

AuthAssociateLoginsRequest.RequiredProperties = ["discard_user_token", "keep_user_token"];

/**
 * Token of the user to discard
 * @member {String} discard_user_token
 */
AuthAssociateLoginsRequest.prototype['discard_user_token'] = undefined;

/**
 * Token of the user to keep
 * @member {String} keep_user_token
 */
AuthAssociateLoginsRequest.prototype['keep_user_token'] = undefined;






export default AuthAssociateLoginsRequest;

