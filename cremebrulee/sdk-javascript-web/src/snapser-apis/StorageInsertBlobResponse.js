/**
 * cremebrulee
 * Your custom SDK
 *
 * The version of the OpenAPI document: cremebrulee: v1 SDK
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient.js';

/**
 * The StorageInsertBlobResponse model module.
 * @module snapser-apis/StorageInsertBlobResponse
 * @version cremebrulee: v1 SDK
 */
class StorageInsertBlobResponse {
    /**
     * Constructs a new <code>StorageInsertBlobResponse</code>.
     * @alias module:snapser-apis/StorageInsertBlobResponse
     */
    constructor() { 
        
        StorageInsertBlobResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StorageInsertBlobResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:snapser-apis/StorageInsertBlobResponse} obj Optional instance to populate.
     * @return {module:snapser-apis/StorageInsertBlobResponse} The populated <code>StorageInsertBlobResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StorageInsertBlobResponse();

            if (data.hasOwnProperty('cas')) {
                obj['cas'] = ApiClient.convertToType(data['cas'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StorageInsertBlobResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StorageInsertBlobResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['cas'] && !(typeof data['cas'] === 'string' || data['cas'] instanceof String)) {
            throw new Error("Expected the field `cas` to be a primitive type in the JSON string but got " + data['cas']);
        }

        return true;
    }


}



/**
 * CAS value used for future operations
 * @member {String} cas
 */
StorageInsertBlobResponse.prototype['cas'] = undefined;






export default StorageInsertBlobResponse;

