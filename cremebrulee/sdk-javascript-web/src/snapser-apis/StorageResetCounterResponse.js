/**
 * cremebrulee
 * Your custom SDK
 *
 * The version of the OpenAPI document: cremebrulee: v1 SDK
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StorageResetCounterResponse model module.
 * @module snapser-apis/StorageResetCounterResponse
 * @version cremebrulee: v1 SDK
 */
class StorageResetCounterResponse {
    /**
     * Constructs a new <code>StorageResetCounterResponse</code>.
     * @alias module:snapser-apis/StorageResetCounterResponse
     * @param count {Number} Value of the counter
     */
    constructor(count) { 
        
        StorageResetCounterResponse.initialize(this, count);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, count) { 
        obj['count'] = count;
    }

    /**
     * Constructs a <code>StorageResetCounterResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:snapser-apis/StorageResetCounterResponse} obj Optional instance to populate.
     * @return {module:snapser-apis/StorageResetCounterResponse} The populated <code>StorageResetCounterResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StorageResetCounterResponse();

            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StorageResetCounterResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StorageResetCounterResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StorageResetCounterResponse.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

StorageResetCounterResponse.RequiredProperties = ["count"];

/**
 * Value of the counter
 * @member {Number} count
 */
StorageResetCounterResponse.prototype['count'] = undefined;






export default StorageResetCounterResponse;

